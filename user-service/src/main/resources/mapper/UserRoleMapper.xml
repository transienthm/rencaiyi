<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mapper.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hr.wozai.service.user.server.dao.userorg.UserRoleMapper">

    <insert id="insertUserRole"
            parameterType="UserRole">
        <selectKey keyProperty="userRoleId" resultType="long" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO user_role
            (user_id,
            org_id,
            role_id,
            team_id,
            created_user_id,
            created_time,
            last_modified_user_id,
            last_modified_time,
            extend)
        VALUES
            (#{userId},
            #{orgId},
            #{roleId},
            #{teamId},
            #{createdUserId},
            ROUND(UNIX_TIMESTAMP(CURTIME(4)) * 1000),
            #{createdUserId},
            ROUND(UNIX_TIMESTAMP(CURTIME(4)) * 1000),
            #{extend})
    </insert>

    <update id="batchDeleteUserRolesByPrimaryKey" parameterType="map">
        update user_role
        <set>is_deleted = 1</set>
        where
            user_role_id IN
            <foreach item="item" index="index" collection="userRoleIds" open="(" separator="," close=")">
                #{item}
            </foreach>
            AND org_id = #{orgId}
    </update>

    <update id="deleteUserRolesByUserId" parameterType="map">
        update user_role
        <set>
            is_deleted = 1,
            last_modified_user_id = #{actorUserId},
            last_modified_time = ROUND(UNIX_TIMESTAMP(CURTIME(4)) * 1000)
        </set>
        where
            org_id = #{orgId}
            AND user_id = #{userId}
    </update>

    <update id="deleteUserRolesByRoleId" parameterType="map">
        update user_role
        <set>
            is_deleted = 1,
            last_modified_user_id = #{actorUserId},
            last_modified_time = ROUND(UNIX_TIMESTAMP(CURTIME(4)) * 1000)
        </set>
        where
        org_id = #{orgId}
        AND role_id = #{roleId}
    </update>

    <update id="deleteUserRoleByUserIdAndRoleId" parameterType="map">
        update user_role
        <set>
            is_deleted = 1,
            last_modified_user_id = #{actorUserId},
            last_modified_time = ROUND(UNIX_TIMESTAMP(CURTIME(4)) * 1000)
        </set>
        where
        org_id = #{orgId}
        AND user_id = #{userId}
        AND role_id = #{roleId}
        AND team_id = #{teamId}
    </update>

    <update id="updateUserRole" parameterType="UserRole">
        update user_role
        <set>
            role_id = #{roleId},
            team_id = #{teamId},
            <if test="null != extend">
                extend = #{extend}
            </if>
        </set>
        where user_role_id = #{userRoleId}
    </update>

    <select id="listUserRolesByUserIdAndOrgId" parameterType="map" resultType="UserRole">
        select * from user_role
        where org_id = #{orgId} AND user_id = #{userId} AND is_deleted = 0
    </select>

    <select id="listUserRolesByRoleIdAndOrgId" parameterType="map" resultType="UserRole">
        select * from user_role
        where org_id = #{orgId} AND role_id = #{roleId} AND is_deleted = 0
    </select>

    <select id="listOrgAdmin" parameterType="map" resultType="UserRole">
        select * from user_role
        where
            org_id = #{orgId}
            AND role_id = #{roleId}
            AND is_deleted = 0
    </select>

    <select id="listTeamAdminsByOrgIdAndTeamId" parameterType="map" resultType="java.lang.Long">
        SELECT
            user_id
        FROM
            user_role
        where
            org_id = #{orgId}
            AND role_id = #{roleId}
            AND team_id = #{teamId}
            AND is_deleted = 0
    </select>

</mapper>
